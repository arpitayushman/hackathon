Action
training_data_type
question
content
Delete
ddl
null
CREATE TABLE public.bbps_ou_details ( ou_id varchar(4) NOT NULL, ou_type varchar(4) NULL, ou_name varchar(100) NULL, ou_effctv_from varchar(8) NULL, ou_effctv_to varchar(8) NULL, ou_endpoint_url varchar(100) NULL, ou_company_tan_no varchar(20) NULL, ou_uaadhar varchar(30) NULL, entity_status varchar(20) NOT NULL, crtn_ts timestamp NULL, crtn_user_id varchar(45) NULL, updt_ts timestamp NULL, updt_user_id varchar(45) NULL, gstin varchar(30) NULL, gst_state_code varchar(3) NULL, ou_group_name varchar(8) NULL, ndc_group varchar(4) NULL, is_parent_ou varchar(1) NULL, upms_request_response_format varchar(10) NULL, upms_end_point_url varchar(100) NULL, upms_supports_cou_reg_api bool NULL, upms_supports_blr_reg_api bool NULL, CONSTRAINT bbps_ou_details_pkey PRIMARY KEY (ou_id) );
Delete
sql
what is the endpoint URL of euronet
SELECT ou_endpoint_url FROM public.bbps_ou_details WHERE ou_name = 'Euronet';
Delete
ddl
null
CREATE TABLE public.bbps_biller_details ( blr_id varchar(30) NOT NULL, blr_name varchar(100) NULL, blr_alias_name varchar(100) NULL, blr_category_name varchar(100) NULL, blr_linked_ou_default varchar(30) NULL, blr_linked_ou_backup_1 varchar(30) NULL, blr_linked_ou_backup_2 varchar(30) NULL, blr_linked_ou_backup_3 varchar(30) NULL, parent_blr_id varchar(30) NULL, is_parent_blr bpchar(1) NULL, blr_mode varchar(20) NULL, blr_accepts_adhoc varchar(1) NULL, blr_payment_modes json NULL, blr_payment_channels json NULL, blr_effctv_from varchar(8) NULL, blr_effctv_to varchar(8) NULL, blr_tan varchar(20) NULL, blr_uaadhaar varchar(30) NULL, blr_customer_params json NULL, entity_status varchar(20) NOT NULL, crtn_ts timestamp NULL, crtn_user_id varchar(45) NULL, updt_ts timestamp NULL, blr_pmt_amt_exactness varchar(10) NULL, fetch_requirement varchar(20) NULL, support_validation_api varchar(20) NULL, support_402_api_flag bool NULL, blr_timeout int2 NULL, blr_payment_modes_402 json NULL, plan_mdm_requirement varchar(20) NULL, upms_support_presentment_registration_flag bool NULL, CONSTRAINT bbps_biller_details_pkey PRIMARY KEY (blr_id) );
Delete
documentation
null
our organization defines transaction failures or transaction success using "response_code" column . "000" means success any other "response_code" means failure
Delete
documentation
null
our organization defines transaction failures or transaction success using "response_code" column . "000" means success any other "response_code" means failure
Delete
ddl
null
CREATE TABLE IF NOT EXISTS public.bbps_txn_report ( ref_id character varying(50) COLLATE pg_catalog."default" NOT NULL, txn_type character varying(20) COLLATE pg_catalog."default" NOT NULL, msg_id character varying(50) COLLATE pg_catalog."default" NOT NULL, mti character varying(30) COLLATE pg_catalog."default", blr_category character varying(100) COLLATE pg_catalog."default", response_code character varying(10) COLLATE pg_catalog."default", payment_channel character varying(30) COLLATE pg_catalog."default", cou_id character varying(20) COLLATE pg_catalog."default", bou_id character varying(20) COLLATE pg_catalog."default", bou_status character varying(20) COLLATE pg_catalog."default", cust_mobile_num character varying(20) COLLATE pg_catalog."default", tran_ref_id character varying(20) COLLATE pg_catalog."default", blr_id character varying(30) COLLATE pg_catalog."default", agent_id character varying(30) COLLATE pg_catalog."default", last_upd_host character varying(50) COLLATE pg_catalog."default", last_upd_port character varying(5) COLLATE pg_catalog."default", last_upd_site_cd character varying(5) COLLATE pg_catalog."default", crtn_ts timestamp without time zone, settlement_cycle_id character varying(30) COLLATE pg_catalog."default", complaince_cd character varying(20) COLLATE pg_catalog."default", complaince_reason character varying(100) COLLATE pg_catalog."default", mandatory_cust_params character varying(1000) COLLATE pg_catalog."default", initiating_ai character varying(10) COLLATE pg_catalog."default", txn_amount numeric, on_us character varying(1) COLLATE pg_catalog."default", payment_mode character varying(30) COLLATE pg_catalog."default", status character varying(20) COLLATE pg_catalog."default", CONSTRAINT bbps_txn_report_pkey PRIMARY KEY (ref_id, txn_type) )
Delete
documentation
null
payment_channel is the channel via fetch transaction happens
Delete
ddl
null
CREATE TABLE public.bbps_certificates_details ( cert_id int8 NOT NULL, ou_id varchar(4) NULL, cert_type varchar(10) NULL, effctv_from varchar(8) NULL, effctv_to varchar(8) NULL, entity_status varchar(20) NOT NULL, crtn_ts timestamp NULL, crtn_user_id varchar(45) NULL, CONSTRAINT bbps_certificates_details_pkey PRIMARY KEY (cert_id, entity_status), CONSTRAINT fk_bbps_certificates_details_ou FOREIGN KEY (ou_id) REFERENCES public.bbps_ou_details (ou_id) ON DELETE SET NULL ON UPDATE CASCADE );
Delete
documentation
null
bbps_txn_report is transaction table where COU_ID and BOU_ID data is mapped to bbps_ou_details table, blr_id data is mapped to bbps_biller_details table
Delete
documentation
null
bbps_ou_details contains all participants details and their respective certificate details are present in bbps_certificate_details table
Delete
sql
Re-run the SQL
SELECT COUNT(*) AS active_signer_certificates FROM public.bbps_certificates_details WHERE cert_type = 'signer' AND entity_status = 'ACTIVE';
Delete
sql
What is the daily txn count of last month
SELECT * FROM public.bbps_txn_report WHERE crtn_ts >= '2025-03-01' AND crtn_ts < '2025-03-17' AND status = 'SUCCESS' AND payment_channel IN ('Mobile', 'Internet');
Delete
sql
daily transaction count of cou Billdesk in Feb 2025
SELECT DATE(crtn_ts) AS txn_date, COUNT(*) AS txn_count FROM public.bbps_txn_report WHERE cou_id = 'BD01' AND crtn_ts >= '2025-02-01' AND crtn_ts < '2025-03-01' GROUP BY DATE(crtn_ts) ORDER BY txn_date;
Delete
sql
when will the ssl certificate of billdesk expire
SELECT effctv_to FROM public.bbps_certificates_details WHERE ou_id = 'BD01' and cert_type='ssl'

document
 phonepe is cou with "cou_id" as "PP01", google pay is cou with "cou_id" as "GP01", mobikwik is cou with "cou_id" as "MK01".

